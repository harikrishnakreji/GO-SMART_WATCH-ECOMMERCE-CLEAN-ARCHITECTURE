definitions:
  models.AddressInfo:
    properties:
      city:
        type: string
      house_name:
        type: string
      name:
        type: string
      pin:
        type: string
      state:
        type: string
      street:
        type: string
    required:
    - city
    - house_name
    - name
    - pin
    - state
    - street
    type: object
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  models.AdminSignUp:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - confirmpassword
    - email
    - name
    - password
    type: object
  models.CategoryUpdate:
    properties:
      category:
        type: string
    required:
    - category
    type: object
  models.Email:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.OTPData:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  models.OrderFromCarts:
    properties:
      address_id:
        type: integer
      payment_id:
        type: integer
    required:
    - address_id
    - payment_id
    type: object
  models.ProductsReceiver:
    properties:
      brand_id:
        type: integer
      category_id:
        type: integer
      name:
        type: string
      price:
        type: number
      products_description:
        type: string
      quantity:
        type: integer
    required:
    - brand_id
    - category_id
    - name
    - price
    - products_description
    - quantity
    type: object
  models.ResetPassword:
    properties:
      cpassword:
        type: string
      password:
        type: string
    required:
    - cpassword
    - password
    type: object
  models.UpdatePassword:
    properties:
      confirm-newpassword:
        type: string
      newpassword:
        type: string
      old-password:
        type: string
    required:
    - newpassword
    - old-password
    type: object
  models.UserDetails:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - confirmpassword
    - email
    - name
    - password
    - phone
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.VerifyData:
    properties:
      code:
        type: string
      user:
        $ref: '#/definitions/models.OTPData'
    required:
    - code
    - user
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact: {}
paths:
  /address:
    post:
      consumes:
      - application/json
      description: AddAddress functionality at the user side
      parameters:
      - description: User Address Input
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.AddressInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: AddAddress functionality for user
      tags:
      - User Profile
  /address/{id}:
    put:
      consumes:
      - application/json
      description: Update User address by sending in address id
      parameters:
      - description: address id
        in: path
        name: id
        required: true
        type: string
      - description: User Address Input
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.AddressInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update User Address
      tags:
      - User Profile
  /admin/adminlogin:
    post:
      consumes:
      - application/json
      description: Login handler for admin
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin Login
      tags:
      - Admin Authentication
  /admin/categories:
    get:
      consumes:
      - application/json
      description: Display Category details on the admin side
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Category Details to admin side
      tags:
      - Admin Category Management
  /admin/categories/add_category:
    post:
      consumes:
      - application/json
      description: Add a new Category So that movie of that category can be added
      parameters:
      - description: Update Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add a new Categorys ( Category )
      tags:
      - Admin Category Management
  /admin/categories/delete_category/{id}:
    post:
      consumes:
      - application/json
      description: Delete Category for existing films and delete the films along with
        it
      parameters:
      - description: category-id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Category ( Category )
      tags:
      - Admin Category Management
  /admin/createadmin:
    post:
      consumes:
      - application/json
      description: Signup handler for admin
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Signup
      tags:
      - Admin Authentication
  /admin/dashboard:
    get:
      consumes:
      - application/json
      description: Get Amin Home Page with Complete Details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Admin Dashboard
      tags:
      - Admin Dash Board
  /admin/orders/{id}:
    get:
      consumes:
      - application/json
      description: Get all order details to the admin side
      parameters:
      - description: Page number
        in: path
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get All order details for admin
      tags:
      - Admin Order Management
  /admin/orders/approve-order/{id}:
    get:
      consumes:
      - application/json
      description: Approve Order from admin side which is in processing state
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Approve Order
      tags:
      - Admin Order Management
  /admin/orders/cancel-order/{id}:
    get:
      consumes:
      - application/json
      description: Cancel Order from admin side
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Cancel Order Admin
      tags:
      - Admin Order Management
  /admin/products:
    get:
      consumes:
      - application/json
      description: Retrieve product Details with pagination to Admin side
      parameters:
      - description: Page number
        in: path
        name: page
        required: true
        type: string
      - description: Products Count Per Page
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Product Details To Admin
      tags:
      - Admin Product Management
  /admin/products/add-product/:
    post:
      consumes:
      - application/json
      description: Add product from admin side
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductsReceiver'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Products
      tags:
      - Admin Product Management
  /admin/products/delete-product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product from the admin side
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete product
      tags:
      - Admin Product Management
  /admin/refund-order/{id}:
    get:
      consumes:
      - application/json
      description: Refund an offer by admin
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Refund Order
      tags:
      - Admin Order Management
  /admin/sales-report/{period}:
    get:
      consumes:
      - application/json
      description: Get Filtered sales report by week, month and year
      parameters:
      - description: sales report
        in: path
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Filtered Sales Report
      tags:
      - Admin Dash Board
  /admin/users/{page}:
    get:
      consumes:
      - application/json
      description: Retrieve users with pagination to admin side
      parameters:
      - description: Page number
        in: path
        name: page
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Users Details To Admin
      tags:
      - Admin User Management
  /admin/users/block-users/{id}:
    post:
      consumes:
      - application/json
      description: Block an existing user using user id
      parameters:
      - description: user-id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Block  user
      tags:
      - Admin User Management
  /admin/users/unblock-users/{id}:
    post:
      consumes:
      - application/json
      description: Unblock an already blocked user using user id
      parameters:
      - description: user-id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Unblock  User
      tags:
      - Admin User Management
  /carts:
    delete:
      consumes:
      - application/json
      description: Remove all product from carts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete all Items Present inside the Carts
      tags:
      - User Carts
    get:
      consumes:
      - application/json
      description: Display all products of the carts along with price of the product
        and grand total
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Display Carts
      tags:
      - User Carts
  /carts/addtocarts/{id}:
    post:
      consumes:
      - application/json
      description: Adding products to carts using product id
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      tags:
      - User Carts
  /carts/removefromcarts/{id}:
    delete:
      consumes:
      - application/json
      description: Remove specified product of quantity 1 from carts using product
        id
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      tags:
      - User Carts
  /checkout:
    get:
      consumes:
      - application/json
      description: Checkout at the user side
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Checkout Order
      tags:
      - User Checkout
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Send OTP to number corresponding to the given username
      parameters:
      - description: send OTP Details
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.Email'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send OTP to Reset Password
      tags:
      - User Authentication
  /forgot-password/reset:
    put:
      consumes:
      - application/json
      description: Reset Password using token Received from confirming OTP
      parameters:
      - description: User Password Reset
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Reset Password Using OTP
      tags:
      - User Authentication
  /forgot-password/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP to get a JWT token which can be used to change password
      parameters:
      - description: Verify OTP Details
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/models.VerifyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP To Reset Password
      tags:
      - User Authentication
  /login:
    post:
      consumes:
      - application/json
      description: LogIn functionality at the user side
      parameters:
      - description: User Details Input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: LogIn functionality for user
      tags:
      - User Authentication
  /order:
    post:
      consumes:
      - application/json
      description: Order all products which is currently present inside  the carts
      parameters:
      - description: Order details
        in: body
        name: orderBody
        required: true
        schema:
          $ref: '#/definitions/models.OrderFromCarts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Order Items from carts
      tags:
      - User Order
  /products/{id}:
    get:
      consumes:
      - application/json
      description: Get Individual Detailed product details to user side
      parameters:
      - description: sku
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Individual Product Details
      tags:
      - User Product
  /products/page/{page}:
    get:
      consumes:
      - application/json
      description: Retrieve all product Details with pagination to users
      parameters:
      - description: Page number
        in: path
        name: page
        required: true
        type: string
      - description: Page Count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Products Details to users
      tags:
      - User Product
  /send-otp:
    post:
      consumes:
      - application/json
      description: Send OTP to Authenticate user
      parameters:
      - description: phone number details
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/models.OTPData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: OTP login
      tags:
      - User OTP Login
  /signup:
    post:
      consumes:
      - application/json
      description: SignUp functionality at the user side
      parameters:
      - description: User Details Input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserDetails'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: SignUp functionality for user
      tags:
      - User Authentication
  /users:
    get:
      consumes:
      - application/json
      description: User Details from User Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: User Details
      tags:
      - User Profile
  /users/address:
    get:
      consumes:
      - application/json
      description: Display all the added user addresses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get all address for the user
      tags:
      - User Profile
  /users/cancel-order/{id}:
    put:
      consumes:
      - application/json
      description: Cancel order by the user using order ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Cancel order
      tags:
      - User Order
  /users/delivered/{id}:
    get:
      consumes:
      - application/json
      description: Order successfully delivered to user which should be confirmed
        by user
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Order Delivered
      tags:
      - User Order
  /users/orders/{id}:
    get:
      consumes:
      - application/json
      description: Get all order details done by user to user side
      parameters:
      - description: page number
        in: path
        name: id
        required: true
        type: string
      - description: page size
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Order Details to user side
      tags:
      - User Order
  /users/return/{id}:
    get:
      consumes:
      - application/json
      description: Return delivered Order by the user by specifying the OrderID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Return Order
      tags:
      - User Order
  /users/update-password:
    put:
      consumes:
      - application/json
      description: Update User Password
      parameters:
      - description: User Password update
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update User Password
      tags:
      - User Profile
  /verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP by passing the OTP in order to authenticate user
      parameters:
      - description: Verify OTP Details
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/models.VerifyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP
      tags:
      - User OTP Login
swagger: "2.0"
